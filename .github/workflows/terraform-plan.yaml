name: "Terraform check"

on:
  pull_request:
    types: [opened, synchronize]

env:
  TF_VERSION: 1.9.0
  AWS_REGION: ap-southeast-1
  ROLE-TO-ASSUME: arn:aws:iam::267583709295:role/Terraform

jobs:
  terraform:
    permissions: write-all
    name: "Terraform plan"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_version: ${{ env.TF_VERSION }}
      
      # Use AssumeRoleWithWebIdentity to assume role no need to use access key and secret key
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.ROLE-TO-ASSUME }}

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            dev:
              - 'env/common-ap-southeast-1/**'
            common:
              - 'env/dev-ap-southeast-1/**'
  
      - name: AWS common resources init
        if: steps.changes.outputs.common == 'true'
        id: common-init
        working-directory: env/common-ap-southeast-1
        run: terraform init

      - name: AWS common resources plan
        if: steps.changes.outputs.common == 'true'
        id: common-plan
        working-directory: env/common-ap-southeast-1
        run: ls -la
        
      - name: AWS dev resources init
        if: steps.changes.outputs.dev == 'true'
        id: dev-init
        working-directory: env/dev-ap-southeast-1
        run: terraform init

      - name: AWS dev resources plan
        if: steps.changes.outputs.dev == 'true'
        id: dev-plan
        working-directory: env/dev-ap-southeast-1
        run: terraform plan -no-color
